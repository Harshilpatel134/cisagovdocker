//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CSETWebEntities : DbContext
    {
        public CSETWebEntities()
            : base("name=CSETWebEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ANSWER> ANSWERs { get; set; }
        public virtual DbSet<ANSWER_LOOKUP> ANSWER_LOOKUP { get; set; }
        public virtual DbSet<ASSESSMENT_SELECTED_LEVELS> ASSESSMENT_SELECTED_LEVELS { get; set; }
        public virtual DbSet<ASSESSMENT> ASSESSMENTS { get; set; }
        public virtual DbSet<AVAILABLE_STANDARDS> AVAILABLE_STANDARDS { get; set; }
        public virtual DbSet<CATALOG_RECOMMENDATIONS_DATA> CATALOG_RECOMMENDATIONS_DATA { get; set; }
        public virtual DbSet<CATALOG_RECOMMENDATIONS_HEADINGS> CATALOG_RECOMMENDATIONS_HEADINGS { get; set; }
        public virtual DbSet<CNSS_CIA_JUSTIFICATIONS> CNSS_CIA_JUSTIFICATIONS { get; set; }
        public virtual DbSet<CNSS_CIA_TYPES> CNSS_CIA_TYPES { get; set; }
        public virtual DbSet<COMPONENT_FAMILY> COMPONENT_FAMILY { get; set; }
        public virtual DbSet<COMPONENT_QUESTIONS> COMPONENT_QUESTIONS { get; set; }
        public virtual DbSet<COMPONENT_STANDARD_QUESTIONS> COMPONENT_STANDARD_QUESTIONS { get; set; }
        public virtual DbSet<COMPONENT_SYMBOLS> COMPONENT_SYMBOLS { get; set; }
        public virtual DbSet<COMPONENT_SYMBOLS_GM_TO_CSET> COMPONENT_SYMBOLS_GM_TO_CSET { get; set; }
        public virtual DbSet<CSET_VERSION> CSET_VERSION { get; set; }
        public virtual DbSet<CUSTOM_BASE_STANDARDS> CUSTOM_BASE_STANDARDS { get; set; }
        public virtual DbSet<CUSTOM_QUESTIONAIRE_QUESTIONS> CUSTOM_QUESTIONAIRE_QUESTIONS { get; set; }
        public virtual DbSet<CUSTOM_QUESTIONAIRES> CUSTOM_QUESTIONAIRES { get; set; }
        public virtual DbSet<CUSTOM_STANDARD_BASE_STANDARD> CUSTOM_STANDARD_BASE_STANDARD { get; set; }
        public virtual DbSet<DEMOGRAPHIC> DEMOGRAPHICS { get; set; }
        public virtual DbSet<DIAGRAM_OBJECT_TYPES> DIAGRAM_OBJECT_TYPES { get; set; }
        public virtual DbSet<DIAGRAM_TEMPLATES> DIAGRAM_TEMPLATES { get; set; }
        public virtual DbSet<DIAGRAM_TYPES> DIAGRAM_TYPES { get; set; }
        public virtual DbSet<DIAGRAM_TYPES_XML> DIAGRAM_TYPES_XML { get; set; }
        public virtual DbSet<FILE_REF_KEYS> FILE_REF_KEYS { get; set; }
        public virtual DbSet<FILE_TYPE> FILE_TYPE { get; set; }
        public virtual DbSet<FINDING> FINDINGs { get; set; }
        public virtual DbSet<FRAMEWORK_TIER_DEFINITIONS> FRAMEWORK_TIER_DEFINITIONS { get; set; }
        public virtual DbSet<FRAMEWORK_TIER_TYPE> FRAMEWORK_TIER_TYPE { get; set; }
        public virtual DbSet<FRAMEWORK_TIER_TYPE_ANSWER> FRAMEWORK_TIER_TYPE_ANSWER { get; set; }
        public virtual DbSet<FRAMEWORK_TIERS> FRAMEWORK_TIERS { get; set; }
        public virtual DbSet<GEN_FILE> GEN_FILE { get; set; }
        public virtual DbSet<GLOBAL_PROPERTIES> GLOBAL_PROPERTIES { get; set; }
        public virtual DbSet<IMPORTANCE> IMPORTANCEs { get; set; }
        public virtual DbSet<INFORMATION> INFORMATION { get; set; }
        public virtual DbSet<LEVEL_NAMES> LEVEL_NAMES { get; set; }
        public virtual DbSet<NAVIGATION_STATE> NAVIGATION_STATE { get; set; }
        public virtual DbSet<NCSF_CATEGORY> NCSF_CATEGORY { get; set; }
        public virtual DbSet<NCSF_FUNCTIONS> NCSF_FUNCTIONS { get; set; }
        public virtual DbSet<NERC_RISK_RANKING> NERC_RISK_RANKING { get; set; }
        public virtual DbSet<NIST_SAL_QUESTION_ANSWERS> NIST_SAL_QUESTION_ANSWERS { get; set; }
        public virtual DbSet<NIST_SAL_QUESTIONS> NIST_SAL_QUESTIONS { get; set; }
        public virtual DbSet<PARAMETER_VALUES> PARAMETER_VALUES { get; set; }
        public virtual DbSet<PROCUREMENT_LANGUAGE_DATA> PROCUREMENT_LANGUAGE_DATA { get; set; }
        public virtual DbSet<PROCUREMENT_LANGUAGE_HEADINGS> PROCUREMENT_LANGUAGE_HEADINGS { get; set; }
        public virtual DbSet<QUESTION_GROUP_TYPE> QUESTION_GROUP_TYPE { get; set; }
        public virtual DbSet<QUESTION_SUB_QUESTION> QUESTION_SUB_QUESTION { get; set; }
        public virtual DbSet<RECENT_FILES> RECENT_FILES { get; set; }
        public virtual DbSet<REF_LIBRARY_PATH> REF_LIBRARY_PATH { get; set; }
        public virtual DbSet<REFERENCE_DOCS> REFERENCE_DOCS { get; set; }
        public virtual DbSet<REFERENCES_DATA> REFERENCES_DATA { get; set; }
        public virtual DbSet<REPORT_DETAIL_SECTION_SELECTION> REPORT_DETAIL_SECTION_SELECTION { get; set; }
        public virtual DbSet<REPORT_DETAIL_SECTIONS> REPORT_DETAIL_SECTIONS { get; set; }
        public virtual DbSet<REPORT_OPTIONS> REPORT_OPTIONS { get; set; }
        public virtual DbSet<REPORT_OPTIONS_SELECTION> REPORT_OPTIONS_SELECTION { get; set; }
        public virtual DbSet<REPORT_STANDARDS_SELECTION> REPORT_STANDARDS_SELECTION { get; set; }
        public virtual DbSet<REQUIREMENT_LEVEL_TYPE> REQUIREMENT_LEVEL_TYPE { get; set; }
        public virtual DbSet<REQUIREMENT_LEVELS> REQUIREMENT_LEVELS { get; set; }
        public virtual DbSet<REQUIREMENT_REFERENCES> REQUIREMENT_REFERENCES { get; set; }
        public virtual DbSet<REQUIREMENT_SETS> REQUIREMENT_SETS { get; set; }
        public virtual DbSet<REQUIREMENT_SOURCE_FILES> REQUIREMENT_SOURCE_FILES { get; set; }
        public virtual DbSet<SAL_DETERMINATION_TYPES> SAL_DETERMINATION_TYPES { get; set; }
        public virtual DbSet<SECTOR> SECTORs { get; set; }
        public virtual DbSet<SECTOR_INDUSTRY> SECTOR_INDUSTRY { get; set; }
        public virtual DbSet<SECTOR_STANDARD_RECOMMENDATIONS> SECTOR_STANDARD_RECOMMENDATIONS { get; set; }
        public virtual DbSet<SET> SETS { get; set; }
        public virtual DbSet<SETS_CATEGORY> SETS_CATEGORY { get; set; }
        public virtual DbSet<SHAPE_TYPES> SHAPE_TYPES { get; set; }
        public virtual DbSet<SP80053_FAMILY_ABBREVIATIONS> SP80053_FAMILY_ABBREVIATIONS { get; set; }
        public virtual DbSet<STANDARD_CATEGORY> STANDARD_CATEGORY { get; set; }
        public virtual DbSet<STANDARD_CATEGORY_SEQUENCE> STANDARD_CATEGORY_SEQUENCE { get; set; }
        public virtual DbSet<STANDARD_SPECIFIC_LEVEL> STANDARD_SPECIFIC_LEVEL { get; set; }
        public virtual DbSet<SYMBOL_GROUPS> SYMBOL_GROUPS { get; set; }
        public virtual DbSet<UNIVERSAL_AREA> UNIVERSAL_AREA { get; set; }
        public virtual DbSet<UNIVERSAL_SAL_LEVEL> UNIVERSAL_SAL_LEVEL { get; set; }
        public virtual DbSet<VISIO_MAPPING> VISIO_MAPPING { get; set; }
        public virtual DbSet<WEIGHT> WEIGHTs { get; set; }
        public virtual DbSet<DEMOGRAPHICS_ASSET_VALUES> DEMOGRAPHICS_ASSET_VALUES { get; set; }
        public virtual DbSet<DEMOGRAPHICS_SIZE> DEMOGRAPHICS_SIZE { get; set; }
        public virtual DbSet<GENERAL_SAL_DESCRIPTIONS> GENERAL_SAL_DESCRIPTIONS { get; set; }
        public virtual DbSet<ASSESSMENT_ROLES> ASSESSMENT_ROLES { get; set; }
        public virtual DbSet<GEN_SAL_NAMES> GEN_SAL_NAMES { get; set; }
        public virtual DbSet<GEN_SAL_WEIGHTS> GEN_SAL_WEIGHTS { get; set; }
        public virtual DbSet<GENERAL_SAL> GENERAL_SAL { get; set; }
        public virtual DbSet<NIST_SAL_INFO_TYPES> NIST_SAL_INFO_TYPES { get; set; }
        public virtual DbSet<NIST_SAL_INFO_TYPES_DEFAULTS> NIST_SAL_INFO_TYPES_DEFAULTS { get; set; }
        public virtual DbSet<REQUIREMENT_QUESTIONS_SETS> REQUIREMENT_QUESTIONS_SETS { get; set; }
        public virtual DbSet<VIEW_QUESTIONS_STATUS> VIEW_QUESTIONS_STATUS { get; set; }
        public virtual DbSet<NEW_QUESTION> NEW_QUESTION { get; set; }
        public virtual DbSet<NEW_REQUIREMENT> NEW_REQUIREMENT { get; set; }
        public virtual DbSet<QUESTION_GROUP_HEADING> QUESTION_GROUP_HEADING { get; set; }
        public virtual DbSet<SUB_CATEGORY_ANSWERS> SUB_CATEGORY_ANSWERS { get; set; }
        public virtual DbSet<UNIVERSAL_SUB_CATEGORIES> UNIVERSAL_SUB_CATEGORIES { get; set; }
        public virtual DbSet<UNIVERSAL_SUB_CATEGORY_HEADINGS> UNIVERSAL_SUB_CATEGORY_HEADINGS { get; set; }
        public virtual DbSet<FINDING_CONTACT> FINDING_CONTACT { get; set; }
        public virtual DbSet<DOCUMENT_FILE> DOCUMENT_FILE { get; set; }
        public virtual DbSet<STANDARD_SELECTION> STANDARD_SELECTION { get; set; }
        public virtual DbSet<NEW_QUESTION_LEVELS> NEW_QUESTION_LEVELS { get; set; }
        public virtual DbSet<vQUESTION_HEADINGS> vQUESTION_HEADINGS { get; set; }
        public virtual DbSet<Answer_Components> Answer_Components { get; set; }
        public virtual DbSet<Answer_Questions> Answer_Questions { get; set; }
        public virtual DbSet<Answer_Questions_No_Components> Answer_Questions_No_Components { get; set; }
        public virtual DbSet<Answer_Requirements> Answer_Requirements { get; set; }
        public virtual DbSet<SECURITY_QUESTION> SECURITY_QUESTION { get; set; }
        public virtual DbSet<USER_SECURITY_QUESTIONS> USER_SECURITY_QUESTIONS { get; set; }
        public virtual DbSet<PARAMETER_ASSESSMENT> PARAMETER_ASSESSMENT { get; set; }
        public virtual DbSet<vParameter> vParameters { get; set; }
        public virtual DbSet<PARAMETER_REQUIREMENTS> PARAMETER_REQUIREMENTS { get; set; }
        public virtual DbSet<PARAMETER> PARAMETERS { get; set; }
        public virtual DbSet<NEW_QUESTION_SETS> NEW_QUESTION_SETS { get; set; }
        public virtual DbSet<ASSESSMENT_DIAGRAM_COMPONENTS> ASSESSMENT_DIAGRAM_COMPONENTS { get; set; }
        public virtual DbSet<ADDRESS> ADDRESSes { get; set; }
        public virtual DbSet<ASSESSMENT_CONTACTS> ASSESSMENT_CONTACTS { get; set; }
        public virtual DbSet<USER_DETAIL_INFORMATION> USER_DETAIL_INFORMATION { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
        public virtual DbSet<JWT> JWT { get; set; }
        public virtual DbSet<SET_FILES> SET_FILES { get; set; }
    
        public virtual int changeEmail(string originalEmail, string newEmail)
        {
            var originalEmailParameter = originalEmail != null ?
                new ObjectParameter("originalEmail", originalEmail) :
                new ObjectParameter("originalEmail", typeof(string));
    
            var newEmailParameter = newEmail != null ?
                new ObjectParameter("newEmail", newEmail) :
                new ObjectParameter("newEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("changeEmail", originalEmailParameter, newEmailParameter);
        }
    
        public virtual int FillEmptyQuestionsForAnalysis(Nullable<int> assessment_Id)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("Assessment_Id", assessment_Id) :
                new ObjectParameter("Assessment_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillEmptyQuestionsForAnalysis", assessment_IdParameter);
        }
    
        public virtual ObjectResult<string> Get_Recommendations(Nullable<int> value, Nullable<int> industry, string organization, string assetvalue)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            var industryParameter = industry.HasValue ?
                new ObjectParameter("industry", industry) :
                new ObjectParameter("industry", typeof(int));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("organization", organization) :
                new ObjectParameter("organization", typeof(string));
    
            var assetvalueParameter = assetvalue != null ?
                new ObjectParameter("assetvalue", assetvalue) :
                new ObjectParameter("assetvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get_Recommendations", valueParameter, industryParameter, organizationParameter, assetvalueParameter);
        }
    
        public virtual int GetApplicationModeDefault(Nullable<int> assessment_Id, ObjectParameter application_Mode)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("Assessment_Id", assessment_Id) :
                new ObjectParameter("Assessment_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetApplicationModeDefault", assessment_IdParameter, application_Mode);
        }
    
        public virtual ObjectResult<GetAreasData_Result> GetAreasData(Nullable<int> assessment_Id, string applicationMode)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("Assessment_Id", assessment_Id) :
                new ObjectParameter("Assessment_Id", typeof(int));
    
            var applicationModeParameter = applicationMode != null ?
                new ObjectParameter("applicationMode", applicationMode) :
                new ObjectParameter("applicationMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAreasData_Result>("GetAreasData", assessment_IdParameter, applicationModeParameter);
        }
    
        public virtual ObjectResult<GetAreasOverall_Result> GetAreasOverall(Nullable<int> assessment_Id, string applicationMode)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("Assessment_Id", assessment_Id) :
                new ObjectParameter("Assessment_Id", typeof(int));
    
            var applicationModeParameter = applicationMode != null ?
                new ObjectParameter("applicationMode", applicationMode) :
                new ObjectParameter("applicationMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAreasOverall_Result>("GetAreasOverall", assessment_IdParameter, applicationModeParameter);
        }
    
        public virtual ObjectResult<GetCombinedOveralls_Result> GetCombinedOveralls(Nullable<int> assessment_Id)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("Assessment_Id", assessment_Id) :
                new ObjectParameter("Assessment_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCombinedOveralls_Result>("GetCombinedOveralls", assessment_IdParameter);
        }
    
        public virtual ObjectResult<GetComparisonAreasFile_Result> GetComparisonAreasFile(Nullable<int> assessment_id, string applicationMode)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            var applicationModeParameter = applicationMode != null ?
                new ObjectParameter("applicationMode", applicationMode) :
                new ObjectParameter("applicationMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComparisonAreasFile_Result>("GetComparisonAreasFile", assessment_idParameter, applicationModeParameter);
        }
    
        public virtual ObjectResult<GetComparisonBestToWorst_Result> GetComparisonBestToWorst(Nullable<int> assessment_id, string applicationMode)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            var applicationModeParameter = applicationMode != null ?
                new ObjectParameter("applicationMode", applicationMode) :
                new ObjectParameter("applicationMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComparisonBestToWorst_Result>("GetComparisonBestToWorst", assessment_idParameter, applicationModeParameter);
        }
    
        public virtual ObjectResult<GetComparisonFileOveralls_Result> GetComparisonFileOveralls(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComparisonFileOveralls_Result>("GetComparisonFileOveralls", assessment_idParameter);
        }
    
        public virtual ObjectResult<GetComparisonFilePercentage_Result> GetComparisonFilePercentage(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("Assessment_id", assessment_id) :
                new ObjectParameter("Assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComparisonFilePercentage_Result>("GetComparisonFilePercentage", assessment_idParameter);
        }
    
        public virtual ObjectResult<GetComparisonFileSummary_Result> GetComparisonFileSummary(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComparisonFileSummary_Result>("GetComparisonFileSummary", assessment_idParameter);
        }
    
        public virtual int GetCompatibilityCounts(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCompatibilityCounts", assessment_idParameter);
        }
    
        public virtual ObjectResult<usp_GetOverallRankedCategoriesPage_Result> usp_GetOverallRankedCategoriesPage(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOverallRankedCategoriesPage_Result>("usp_GetOverallRankedCategoriesPage", assessment_idParameter);
        }
    
        public virtual int GetActiveQuestionsOrRequirements(Nullable<int> assessment_Id)
        {
            var assessment_IdParameter = assessment_Id.HasValue ?
                new ObjectParameter("assessment_Id", assessment_Id) :
                new ObjectParameter("assessment_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetActiveQuestionsOrRequirements", assessment_IdParameter);
        }
    
        public virtual ObjectResult<usp_GetRankedQuestions_Result> usp_GetRankedQuestions(Nullable<int> assessment_id)
        {
            var assessment_idParameter = assessment_id.HasValue ?
                new ObjectParameter("assessment_id", assessment_id) :
                new ObjectParameter("assessment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRankedQuestions_Result>("usp_GetRankedQuestions", assessment_idParameter);
        }
    }
}
